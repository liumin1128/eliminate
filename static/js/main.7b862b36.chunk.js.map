{"version":3,"sources":["Box/game.js","Box/index.js","App.js","reportWebVitals.js","index.js"],"names":["randomString","len","$chars","maxPos","length","pwd","i","charAt","Math","floor","random","sleep","t","Promise","resolve","reject","setTimeout","getRandomAnmal","list","Gamer","x","y","init","onDataChange","onScoreChange","onTimeChange","Howler","volume","sound","map","Howl","src","onplayerror","err","this","once","play","onend","start","timeLoop","time","alert","score","getData","data","update","click","o","a","selectIdx","findIndex","select","objIdx","setIn","a2b","maxX","maxY","combo","List","m","n","j","animal","push","id","initData","checkStatus","transXYMap","transMaxXYMap","checkLine","row","type","current","p","q","result","getValue","value","idx","loop","next","find","getItem","removeList","s","flatten","unionBy","status","temp","sumMap","undefined","sum","b","ax","getIn","ay","bx","by","abs","getRemoveList","remove","setRemoveStatus","setRemovePosition","getDownList","gamer","useState","setList","setScore","setTime","width","setWidth","useEffect","document","querySelector","offsetWidth","className","style","paddingTop","onClick","cls","removed","removing","height","transform","animate__tada","backgroundImage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7b862b36.chunk.js","sourcesContent":["import flatten from \"lodash/flatten\";\nimport unionBy from \"lodash/unionBy\";\nimport { List } from \"immutable\";\nimport { Howl, Howler } from \"howler\";\n\nexport const randomString = (len = 32) => {\n  const $chars = \"ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678\";\n  /** **默认去掉了容易混淆的字符oOLl,9gq,Vv,Uu,I1*** */\n  const maxPos = $chars.length;\n  let pwd = \"\";\n  for (let i = 0; i < len; i += 1) {\n    pwd += $chars.charAt(Math.floor(Math.random() * maxPos));\n  }\n  return pwd;\n};\n\nconst sleep = (t) => new Promise((resolve, reject) => setTimeout(resolve, t));\n\nfunction getRandomAnmal() {\n  const list = [\n    // \"alligator\",\n    \"chicken\",\n    \"frog\",\n    // \"mouse\",\n    \"sea-lion\",\n    \"bear\",\n    \"dog\",\n    // \"hippo\",\n    // \"owl\",\n    // \"sheep\",\n    // \"bull\",\n    // \"duck\",\n    // \"lion\",\n    // \"panda\",\n    // \"snake\",\n    // \"cat\",\n    // \"elephant\",\n    // \"monkey\",\n    // \"pig\",\n    // \"tiger\",\n  ];\n\n  const i = Math.floor(Math.random() * list.length);\n  return list[i];\n}\n\nfunction initData(m, n) {\n  const list = [];\n  for (let i = 0; i < m; i++) {\n    for (let j = 0; j < n; j++) {\n      const animal = getRandomAnmal();\n      list.push({\n        id: randomString(),\n        x: i,\n        y: j,\n        animal,\n        select: false,\n      });\n    }\n  }\n\n  return list;\n}\n\nclass Gamer {\n  constructor(x, y) {\n    this.maxX = x;\n    this.maxY = y;\n  }\n\n  start() {\n    this.score = 0;\n    this.combo = 0;\n    this.time = 30000;\n    this.data = List(initData(this.maxX, this.maxY));\n\n    this.onDataChange(this.data);\n    this.onScoreChange(this.score);\n    this.onTimeChange(this.time);\n    this.checkStatus();\n    this.timeLoop();\n  }\n\n  init = ({ onDataChange, onScoreChange, onTimeChange }) => {\n    Howler.volume(0.5);\n\n    this.sound = {};\n\n    [\"d1\", \"d2\", \"keyboard\"].map((i) => {\n      this.sound[i] = new Howl({\n        src: [\"./audios/\" + i + \".mp3\"],\n        onplayerror: function (err) {\n          this.sound.once(\"unlock\", function () {\n            this.sound.play();\n          });\n        },\n        volume: 0.5,\n        onend: function () {},\n      });\n    });\n\n    this.onDataChange = onDataChange;\n    this.onScoreChange = onScoreChange;\n    this.onTimeChange = onTimeChange;\n\n    this.start();\n  };\n\n  timeLoop = () => {\n    if (this.time > 0) {\n      this.time = this.time - 1000;\n      this.onTimeChange(this.time);\n      setTimeout(() => {\n        this.timeLoop();\n      }, 1000);\n    } else {\n      alert(\"game over, socre:\" + this.score);\n      this.start();\n    }\n  };\n\n  getData = () => {\n    return this.data;\n  };\n\n  update = () => {\n    this.onDataChange(this.data);\n  };\n\n  getRemoveList(data) {\n    const transXYMap = {\n      x: \"y\",\n      y: \"x\",\n    };\n\n    const transMaxXYMap = {\n      x: this.maxX,\n      y: this.maxY,\n    };\n\n    function checkLine(list, row, type) {\n      let p = 0;\n      let q = 0;\n      let result = [];\n\n      function getItem(data) {\n        const item = list.find(\n          (i) => i[type] === data && i[transXYMap[type]] === row\n        );\n\n        return item;\n      }\n\n      function getValue(value) {\n        let x;\n        let y;\n        let idx;\n        if (type === \"x\") {\n          x = value;\n          y = row;\n        }\n        if (type === \"y\") {\n          x = row;\n          y = value;\n        }\n        idx = list.findIndex((i) => i.x === x && i.y === y);\n        return { x, y, idx };\n      }\n\n      let current;\n\n      function loop() {\n        let next = getItem(q);\n\n        if (!next) {\n          current = null;\n          if (q < transMaxXYMap[type] - 1) {\n            q += 1;\n            loop();\n            return;\n          }\n        }\n\n        if (!current) {\n          current = next;\n        }\n\n        if (current.animal !== next.animal) {\n          if (q - 1 - p > 1) {\n            for (let x = p; x <= q - 1; x++) {\n              result.push(getValue(x));\n            }\n          }\n          p = q;\n        }\n\n        if (q === transMaxXYMap[type] - 1) {\n          if (q - p > 1) {\n            for (let x = p; x <= q; x++) {\n              result.push(getValue(x));\n            }\n          }\n          return;\n        }\n\n        if (q < transMaxXYMap[type] - 1) {\n          q += 1;\n          current = next;\n          loop();\n          return;\n        }\n      }\n\n      loop();\n\n      return result;\n    }\n\n    let removeList = [];\n    for (let i = 0; i < this.maxY; i++) {\n      removeList.push(checkLine(data, i, \"x\"));\n    }\n    for (let i = 0; i < this.maxX; i++) {\n      removeList.push(checkLine(data, i, \"y\"));\n    }\n    const s = flatten(removeList);\n    const t = unionBy(s, (i) => i.idx);\n    removeList = t;\n    return removeList;\n  }\n\n  setRemoveStatus(removeList, status) {\n    let temp = this.data;\n    removeList.map(({ idx }) => {\n      temp = temp.setIn([idx, \"status\"], status);\n    });\n    return temp;\n  }\n\n  setRemovePosition(removeList) {\n    let temp = this.data;\n    let sumMap = {};\n    removeList.map(({ idx, x, y }) => {\n      if (sumMap[x] === undefined) {\n        sumMap[x] = -1;\n      } else {\n        sumMap[x] = sumMap[x] - 1;\n      }\n      temp = temp\n        .setIn([idx, \"y\"], sumMap[x])\n        // .setIn([idx, \"remove\"], false)\n        .setIn([idx, \"animal\"], getRandomAnmal());\n    });\n    return temp;\n  }\n\n  getDownList() {\n    let temp = this.data;\n    for (let x = 0; x < this.maxX; x++) {\n      let sum = 0;\n      for (let y = -this.maxY; y < this.maxY; y++) {\n        const idx = this.data.findIndex((i) => i.x === x && i.y === y);\n        if (idx !== -1) {\n          temp = temp.setIn([idx, \"y\"], sum);\n          sum++;\n        }\n      }\n    }\n    this.data = temp;\n  }\n\n  a2b(a, b) {\n    const ax = this.data.getIn([a, \"x\"]);\n    const ay = this.data.getIn([a, \"y\"]);\n    const bx = this.data.getIn([b, \"x\"]);\n    const by = this.data.getIn([b, \"y\"]);\n\n    // 如果不是水平方向平移一位\n    if (Math.abs(ax - bx) + Math.abs(ay - by) != 1) {\n      return;\n    }\n\n    const temp = this.data\n      .setIn([a, \"x\"], bx)\n      .setIn([a, \"y\"], by)\n      .setIn([b, \"x\"], ax)\n      .setIn([b, \"y\"], ay);\n\n    const removeList = this.getRemoveList(temp);\n    if (removeList.length > 0) {\n      this.data = temp;\n      this.remove(removeList);\n    }\n  }\n\n  click = async (o) => {\n    this.sound[\"keyboard\"].play();\n\n    const selectIdx = this.data.findIndex((i) => i.select);\n    const objIdx = this.data.findIndex((i) => i.x === o.x && i.y === o.y);\n    if (selectIdx != -1) {\n      if (selectIdx === objIdx) {\n        this.data = this.data.setIn([objIdx, \"select\"], false);\n      } else {\n        this.a2b(selectIdx, objIdx);\n        this.data = this.data.setIn([selectIdx, \"select\"], false);\n      }\n      // setList(a2b(this.data, selectIdx, objIdx).setIn([selectIdx, \"select\"], false));\n    } else {\n      this.data = this.data.setIn([objIdx, \"select\"], true);\n    }\n    this.update();\n    // this.checkStatus();\n  };\n\n  async remove(removeList) {\n    this.sound[\"d1\"].play();\n\n    this.score = this.score + removeList.length * this.combo * 100;\n    this.onScoreChange(this.score);\n    this.time = this.time + 1000;\n    if (this.time > 30000) {\n      this.time = 30000;\n    }\n    this.onTimeChange(this.time);\n\n    this.data = this.setRemoveStatus(removeList, \"removing\");\n    this.update();\n\n    await sleep(1000);\n    this.data = this.setRemoveStatus(removeList, \"removed\");\n    this.update();\n\n    await sleep(30);\n    this.data = this.setRemovePosition(removeList);\n    this.update();\n\n    await sleep(30);\n    this.data = this.setRemoveStatus(removeList, \"ok\");\n    this.update();\n\n    await sleep(30);\n    this.getDownList();\n    this.update();\n\n    await sleep(300);\n    this.checkStatus();\n  }\n\n  async checkStatus() {\n    const removeList = this.getRemoveList(this.data);\n    if (removeList.length === 0) return; // 检查是否有需要更新的方块\n\n    // 重新计算移除组\n    if (removeList.length === 0) {\n      // 重置连击数\n      this.combo = 0;\n      return;\n    }\n\n    // 累计连击数\n    this.combo = this.combo + 1;\n    await this.remove(removeList);\n  }\n}\n\nexport default Gamer;\n","import React, { useState, useEffect } from \"react\";\nimport cls from \"classnames\";\nimport flatten from \"lodash/flatten\";\nimport unionBy from \"lodash/unionBy\";\nimport { List } from \"immutable\";\nimport Gamer from \"./game\";\nimport \"animate.css\";\nimport \"./index.css\";\n\nconst m = 9;\nconst n = 9;\n\nconst gamer = new Gamer(m, n);\n\nexport default () => {\n  const [list, setList] = useState(null);\n  const [score, setScore] = useState(0);\n  const [time, setTime] = useState(0);\n  const [width, setWidth] = useState(0);\n  useEffect(() => {\n    setWidth(document.querySelector(\".root\").offsetWidth / m);\n  }, []);\n\n  function test(o) {\n    gamer.click(o);\n  }\n\n  function start() {\n    gamer.init({\n      onDataChange: setList,\n      onScoreChange: setScore,\n      onTimeChange: setTime,\n    });\n  }\n\n  return (\n    <div className=\"root\">\n      {list ? (\n        <>\n          <div className=\"header\">\n            <h1>Score: {score}</h1>\n            <h1>Time: {time / 1000}</h1>\n          </div>\n\n          <div className=\"list\" style={{ paddingTop: (n / m) * 100 + \"%\" }}>\n            {list.map((i) => {\n              return (\n                <div\n                  onClick={() => {\n                    test(i);\n                  }}\n                  className={cls([\n                    \"item\",\n                    // \"animate__animated\",\n                    {\n                      select: i.select,\n                      removed: i.status === \"removed\",\n                      removing: i.status === \"removing\",\n                      // animate__tada: i.remove,\n                    },\n                  ])}\n                  key={i.id}\n                  style={{\n                    width: width,\n                    height: width,\n                    transform:\n                      \"translate3d(\" +\n                      i.x * width +\n                      \"px,\" +\n                      i.y * width +\n                      \"px,0)\",\n                    // left: i.x * width + \"px\",\n                    // top: i.y * width + \"px\",\n                    // backgroundImage: \"url(./images/\" + i.animal + \".svg)\",\n                  }}\n                >\n                  <div\n                    className={cls([\n                      \"icon\",\n                      \"animate__animated\",\n                      {\n                        animate__tada: i.status === \"removing\",\n                      },\n                    ])}\n                    key={i.id}\n                    style={{\n                      width: width,\n                      height: width,\n                      backgroundImage: \"url(./images/\" + i.animal + \".svg)\",\n                    }}\n                  >\n                    {/* {i.status + \":\" + i.x + \",\" + i.y} */}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </>\n      ) : (\n        <div>\n          <div>冲呀</div>\n          <div className=\"start\" onClick={start}>\n            START\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import './App.css';\nimport Box from './Box'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Box></Box>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}