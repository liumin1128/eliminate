{"version":3,"sources":["utils/common.js","utils/av.js","Rankings/index.js","Box/game.js","Box/index.js","App.js","reportWebVitals.js","index.js"],"names":["randomString","len","$chars","maxPos","length","pwd","i","charAt","Math","floor","random","sleep","t","Promise","resolve","reject","setTimeout","getRandomAnmal","list","updateScore","score","a","AV","Leaderboard","updateStatistics","User","current","Eliminate","catch","console","error","getScoreList","leaderboard","createWithoutData","getResults","limit","skip","selectUserKeys","getAroundScoreList","getResultsAroundUser","init","appId","appKey","serverURL","useState","data","setData","data2","setData2","user","useEffect","all","res","res2","className","map","rank","get","value","filter","uid","findIndex","j","Gamer","x","y","onDataChange","onScoreChange","onTimeChange","onGameOver","Howler","volume","sound","Howl","src","onplayerror","err","this","once","play","onend","start","timeLoop","time","status","getData","update","click","o","log","selectIdx","select","objIdx","setIn","a2b","touchMove","sx","sy","ex","ey","sId","eId","maxX","maxY","combo","List","m","n","animal","push","id","initData","checkStatus","transXYMap","transMaxXYMap","checkLine","row","type","p","q","result","getValue","idx","loop","next","find","getItem","removeList","s","flatten","unionBy","temp","sumMap","undefined","sum","b","ax","getIn","ay","bx","by","abs","getRemoveList","remove","setRemoveStatus","setRemovePosition","getDownList","gamer","setList","setScore","setTime","width","setWidth","submitScoreWithSetNickname","Swal","fire","title","input","imageUrl","imageWidth","imageHeight","inputAttributes","autocapitalize","placeholder","required","showCancelButton","confirmButtonText","cancelButtonText","showLoaderOnConfirm","submitScore","handleGameOver","isConfirmed","setUsername","setPassword","set","signUp","bodyScroll","e","preventDefault","document","querySelector","offsetWidth","body","addEventListener","style","position","removeEventListener","passive","onTouchEnd","element","changedTouches","target","parseInt","getAttribute","px","pageX","py","pageY","rect","getBoundingClientRect","rx","ry","e2f","paddingTop","onClick","cls","removed","removing","height","transform","data-x","data-y","animate__tada","backgroundImage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9d08f601.chunk.js","sourcesContent":["export const randomString = (len = 32) => {\n  const $chars = \"ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678\";\n  /** **默认去掉了容易混淆的字符oOLl,9gq,Vv,Uu,I1*** */\n  const maxPos = $chars.length;\n  let pwd = \"\";\n  for (let i = 0; i < len; i += 1) {\n    pwd += $chars.charAt(Math.floor(Math.random() * maxPos));\n  }\n  return pwd;\n};\n\nexport const sleep = (t) =>\n  new Promise((resolve, reject) => setTimeout(resolve, t));\n\nexport function getRandomAnmal() {\n  const list = [\n    // \"alligator\",\n    \"chicken\",\n    \"frog\",\n    // \"mouse\",\n    \"sea-lion\",\n    \"bear\",\n    \"dog\",\n    // \"hippo\",\n    // \"owl\",\n    // \"sheep\",\n    // \"bull\",\n    // \"duck\",\n    // \"lion\",\n    // \"panda\",\n    // \"snake\",\n    // \"cat\",\n    // \"elephant\",\n    // \"monkey\",\n    // \"pig\",\n    // \"tiger\",\n  ];\n\n  const i = Math.floor(Math.random() * list.length);\n  return list[i];\n}\n\nexport function initData(m, n) {\n  const list = [];\n  for (let i = 0; i < m; i++) {\n    for (let j = 0; j < n; j++) {\n      const animal = getRandomAnmal();\n      list.push({\n        id: randomString(),\n        x: i,\n        y: j,\n        animal,\n        select: false,\n      });\n    }\n  }\n\n  return list;\n}\n","import AV from \"leancloud-storage\";\nimport { randomString } from \"./common\";\n\nAV.init({\n  appId: \"GmXQQSUuhWfw5bhp0cfmOzkY-gzGzoHsz\",\n  appKey: \"YEXH3kL8fo6DW4ORrYptEMTu\",\n  serverURL: \"https://gmxqqsuu.lc-cn-n1-shared.com\",\n});\n\nexport async function guestLogin() {\n  const username = randomString(8);\n  const password = \"guest\";\n  return AV.User.logIn(username, password);\n}\n\nexport async function loginAnonymously() {\n  return AV.User.loginAnonymously();\n}\n\nexport async function updateScore(score) {\n  return AV.Leaderboard.updateStatistics(AV.User.current(), {\n    Eliminate: score,\n  }).catch(console.error);\n}\n\nexport async function getScoreList() {\n  var leaderboard = AV.Leaderboard.createWithoutData(\"Eliminate\");\n  return leaderboard\n    .getResults({\n      limit: AV.User.current() ? 3 : 999,\n      skip: 0,\n      selectUserKeys: [\"nickname\", \"username\"],\n    })\n    .catch(console.error);\n}\n\nexport async function getAroundScoreList() {\n  var leaderboard = AV.Leaderboard.createWithoutData(\"Eliminate\");\n  return leaderboard\n    .getResultsAroundUser({\n      limit: 13,\n      selectUserKeys: [\"nickname\", \"username\"],\n    })\n    .catch(console.error);\n}\n\n// 当前玩家需要先登录\n// AV.User.logIn('playerA', 'guest').then((loggedInUser) => {\n//     // 查询另一个玩家在排行榜中的成绩\n//     var otherUser = AV.Object.createWithoutData(AV.User, '5cee072ac8959c0069f62ca8');\n//     return AV.Leaderboard.getStatistics(otherUser, {statisticNames: ['score', 'kills']});\n//   }).then(function(statistics) {\n//     // statistics 是查询的成绩结果\n//   }).catch(function (error) {\n//       // 异常处理\n//   });\n","import React, { useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport AV from \"leancloud-storage\";\nimport { getScoreList, getAroundScoreList } from \"../utils/av\";\nimport \"./index.css\";\n\nfunction renderUser(user) {\n  if (user.name) return user.name;\n  // const list = ['不愿透露姓名的用户','神秘大侠', '佚名',\"\"]\n  return \"神秘用户：\" + user.id;\n}\n\nexport default () => {\n  const [data, setData] = useState([]);\n  const [data2, setData2] = useState([]);\n\n  const user = AV.User.current();\n\n  useEffect(async () => {\n    const [res, res2] = await Promise.all([\n      getScoreList(),\n      getAroundScoreList(),\n    ]);\n    setData(res);\n    setData2(res2 || []);\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h3 className=\"title\">排行榜：</h3>\n      <ul className=\"ul\">\n        {data.map((i) => {\n          return (\n            <li key={get(i, \"user.id\")} className=\"li\">\n              <span className=\"rank\">\n                第{i.rank + 1}名\n                {get(user, \"id\") === get(i, \"user.id\") ? \"(你)\" : \"\"}\n              </span>\n              <span className=\"name\">{get(i, \"user.attributes.nickname\")}</span>\n              <span className=\"value\">{i.value}</span>\n            </li>\n          );\n        })}\n\n        <li className=\"li\">\n          <span className=\"rank\">...</span>\n          <span className=\"name\"></span>\n          <span className=\"value\"></span>\n        </li>\n        {data2\n          .filter((i) => {\n            const uid = get(i, \"user.id\");\n            const idx = data.findIndex((j) => get(j, \"user.id\") === uid);\n            return idx === -1;\n          })\n          .map((i) => {\n            return (\n              <li key={get(i, \"user.id\")} className=\"li\">\n                <span className=\"rank\">\n                  第{i.rank + 1}名\n                  {get(user, \"id\") === get(i, \"user.id\") ? \"(你)\" : \"\"}\n                </span>\n                <span className=\"name\">\n                  {get(i, \"user.attributes.nickname\")}\n                </span>\n                <span className=\"value\">{i.value}</span>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\n","import flatten from \"lodash/flatten\";\nimport unionBy from \"lodash/unionBy\";\nimport get from \"lodash/get\";\nimport { List } from \"immutable\";\nimport { Howl, Howler } from \"howler\";\n// import { updateScore } from \"../utils/av\";\nimport { randomString, sleep, getRandomAnmal, initData } from \"../utils/common\";\n\nclass Gamer {\n  constructor(x, y) {\n    this.maxX = x;\n    this.maxY = y;\n  }\n\n  start() {\n    this.status = \"playing\";\n    this.score = 0;\n    this.combo = 1;\n    this.time = 3000000;\n    this.data = List(initData(this.maxX, this.maxY));\n\n    this.onDataChange(this.data);\n    this.onScoreChange(this.score);\n    this.onTimeChange(this.time);\n    this.checkStatus();\n    this.timeLoop();\n  }\n\n  init = ({ onDataChange, onScoreChange, onTimeChange, onGameOver }) => {\n    Howler.volume(0.5);\n\n    this.sound = {};\n\n    [\"d1\", \"d2\", \"keyboard\"].map((i) => {\n      this.sound[i] = new Howl({\n        src: [\"./audios/\" + i + \".mp3\"],\n        onplayerror: function (err) {\n          this.sound.once(\"unlock\", function () {\n            this.sound.play();\n          });\n        },\n        volume: 0.5,\n        onend: function () {},\n      });\n    });\n\n    this.onDataChange = onDataChange;\n    this.onScoreChange = onScoreChange;\n    this.onTimeChange = onTimeChange;\n    this.onGameOver = onGameOver;\n\n    this.start();\n  };\n\n  timeLoop = () => {\n    if (this.time > 0) {\n      this.time = this.time - 1000;\n      this.onTimeChange(this.time);\n      setTimeout(() => {\n        this.timeLoop();\n      }, 1000);\n    } else {\n      this.status = \"end\";\n      this.onGameOver(this.score);\n      // alert(\"game over, socre:\" + this.score);\n      // this.start();\n    }\n  };\n\n  getData = () => {\n    return this.data;\n  };\n\n  update = () => {\n    this.onDataChange(this.data);\n  };\n\n  getRemoveList(data) {\n    const transXYMap = {\n      x: \"y\",\n      y: \"x\",\n    };\n\n    const transMaxXYMap = {\n      x: this.maxX,\n      y: this.maxY,\n    };\n\n    function checkLine(list, row, type) {\n      let p = 0;\n      let q = 0;\n      let result = [];\n\n      function getItem(data) {\n        const item = list.find(\n          (i) => i[type] === data && i[transXYMap[type]] === row\n        );\n\n        return item;\n      }\n\n      function getValue(value) {\n        let x;\n        let y;\n        let idx;\n        if (type === \"x\") {\n          x = value;\n          y = row;\n        }\n        if (type === \"y\") {\n          x = row;\n          y = value;\n        }\n        idx = list.findIndex((i) => i.x === x && i.y === y);\n        return { x, y, idx };\n      }\n\n      let current;\n\n      function loop() {\n        let next = getItem(q);\n\n        if (!next) {\n          current = null;\n          return\n          if (q < transMaxXYMap[type] - 1) {\n            q += 1;\n            loop();\n            return;\n          }\n        }\n\n        if (!current) {\n          current = next;\n        }\n\n        if (get(current, \"animal\") !== get(next, \"animal\")) {\n          if (q - 1 - p > 1) {\n            for (let x = p; x <= q - 1; x++) {\n              result.push(getValue(x));\n            }\n          }\n          p = q;\n        }\n\n        if (q === transMaxXYMap[type] - 1) {\n          if (q - p > 1) {\n            for (let x = p; x <= q; x++) {\n              result.push(getValue(x));\n            }\n          }\n          return;\n        }\n\n        if (q < transMaxXYMap[type] - 1) {\n          q += 1;\n          current = next;\n          loop();\n          return;\n        }\n      }\n\n      loop();\n\n      return result;\n    }\n\n    let removeList = [];\n    for (let i = 0; i < this.maxY; i++) {\n      removeList.push(checkLine(data, i, \"x\"));\n    }\n    for (let i = 0; i < this.maxX; i++) {\n      removeList.push(checkLine(data, i, \"y\"));\n    }\n    const s = flatten(removeList);\n    const t = unionBy(s, (i) => i.idx);\n    removeList = t;\n    return removeList;\n  }\n\n  setRemoveStatus(removeList, status) {\n    let temp = this.data;\n    removeList.map(({ idx }) => {\n      temp = temp.setIn([idx, \"status\"], status);\n    });\n    return temp;\n  }\n\n  setRemovePosition(removeList) {\n    let temp = this.data;\n    let sumMap = {};\n    removeList.map(({ idx, x, y }) => {\n      if (sumMap[x] === undefined) {\n        sumMap[x] = -1;\n      } else {\n        sumMap[x] = sumMap[x] - 1;\n      }\n      temp = temp\n        .setIn([idx, \"y\"], sumMap[x])\n        // .setIn([idx, \"remove\"], false)\n        .setIn([idx, \"animal\"], getRandomAnmal());\n    });\n    return temp;\n  }\n\n  getDownList() {\n    let temp = this.data;\n    for (let x = 0; x < this.maxX; x++) {\n      let sum = 0;\n      for (let y = -this.maxY; y < this.maxY; y++) {\n        const idx = this.data.findIndex((i) => i.x === x && i.y === y);\n        if (idx !== -1) {\n          temp = temp.setIn([idx, \"y\"], sum);\n          sum++;\n        }\n      }\n    }\n    this.data = temp;\n  }\n\n  a2b(a, b) {\n    const ax = this.data.getIn([a, \"x\"]);\n    const ay = this.data.getIn([a, \"y\"]);\n    const bx = this.data.getIn([b, \"x\"]);\n    const by = this.data.getIn([b, \"y\"]);\n\n    // 如果不是水平方向平移一位\n    if (Math.abs(ax - bx) + Math.abs(ay - by) != 1) {\n      return;\n    }\n\n    const temp = this.data\n      .setIn([a, \"x\"], bx)\n      .setIn([a, \"y\"], by)\n      .setIn([b, \"x\"], ax)\n      .setIn([b, \"y\"], ay);\n\n    const removeList = this.getRemoveList(temp);\n    if (removeList.length > 0) {\n      this.data = temp;\n      this.remove(removeList);\n    }\n  }\n\n  click = async (o) => {\n    console.log(\"this.status: \", this.status);\n    if (this.status !== \"playing\") {\n      return;\n    }\n\n    this.sound[\"keyboard\"].play();\n\n    const selectIdx = this.data.findIndex((i) => i.select);\n    const objIdx = this.data.findIndex((i) => i.x === o.x && i.y === o.y);\n    if (selectIdx != -1) {\n      if (selectIdx === objIdx) {\n        this.data = this.data.setIn([objIdx, \"select\"], false);\n      } else {\n        this.a2b(selectIdx, objIdx);\n        this.data = this.data.setIn([selectIdx, \"select\"], false);\n      }\n      // setList(a2b(this.data, selectIdx, objIdx).setIn([selectIdx, \"select\"], false));\n    } else {\n      this.data = this.data.setIn([objIdx, \"select\"], true);\n    }\n    this.update();\n    // this.checkStatus();\n  };\n\n  touchMove = async (sx, sy, ex, ey) => {\n    console.log(\"this.status: \", this.status);\n\n    if (this.status !== \"playing\") {\n      return;\n    }\n    \n    const sId = this.data.findIndex((i) => i.x === sx && i.y === sy);\n    const eId = this.data.findIndex((i) => i.x === ex && i.y === ey);\n\n    this.a2b(sId, eId);\n    this.update();\n  };\n\n  async remove(removeList) {\n    this.sound[\"d1\"].play();\n\n    this.score = this.score + removeList.length * this.combo * 100;\n    this.onScoreChange(this.score);\n    this.time = this.time + 2000;\n    if (this.time > 30000) {\n      this.time = 30000;\n    }\n    this.onTimeChange(this.time);\n\n    this.data = this.setRemoveStatus(removeList, \"removing\");\n    this.update();\n\n    await sleep(1000);\n    this.data = this.setRemoveStatus(removeList, \"removed\");\n    this.update();\n\n    await sleep(30);\n    this.data = this.setRemovePosition(removeList);\n    this.update();\n\n    await sleep(30);\n    this.data = this.setRemoveStatus(removeList, \"ok\");\n    this.update();\n\n    await sleep(30);\n    this.getDownList();\n    this.update();\n\n    await sleep(300);\n    this.checkStatus();\n  }\n\n  async checkStatus() {\n    if (this.status === \"end\") {\n      return;\n    }\n\n    const removeList = this.getRemoveList(this.data);\n\n    // 重新计算移除组\n    if (removeList.length === 0) {\n      // 重置连击数\n      this.combo = 1;\n      this.status = \"playing\";\n      return;\n    }\n\n    this.status = \"moving\";\n\n    // 累计连击数\n    this.combo = this.combo + 1;\n    await this.remove(removeList);\n  }\n}\n\nexport default Gamer;\n","import React, { useState, useEffect } from \"react\";\nimport get from \"lodash/get\";\nimport AV from \"leancloud-storage\";\nimport cls from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport Rankings from \"../Rankings\";\nimport { updateScore, loginAnonymously } from \"../utils/av\";\nimport Gamer from \"./game\";\nimport \"animate.css\";\nimport \"./index.css\";\n\nconst m = 9;\nconst n = 9;\n\nconst gamer = new Gamer(m, n);\n\nexport default () => {\n  const [list, setList] = useState(null);\n  const [score, setScore] = useState(0);\n  const [time, setTime] = useState(0);\n  const [width, setWidth] = useState(0);\n\n  useEffect(() => {\n    setWidth(document.querySelector(\".root\").offsetWidth / m);\n\n    // document.body.addEventListener(\"touchmove\", bodyScroll, { passive: false });\n    function bodyScroll(e) {\n      e.preventDefault();\n    }\n\n    document.body.addEventListener(\"touchmove\", bodyScroll, false);\n    document.body.style.position = \"fixed\";\n    document.body.style.width = \"100%\";\n\n    return () => {\n\n      document.body.removeEventListener(\"touchmove\", bodyScroll, {\n        passive: false,\n      });\n      document.body.style.position = \"initial\";\n      document.body.style.width = \"auto\";\n    };\n  }, []);\n\n  function handleClick(o) {\n    gamer.click(o);\n  }\n\n  function handleTouchStart(e) {\n    e.preventDefault();\n  }\n\n  function handleTouchEnd(e) {\n    e.preventDefault();\n    console.log(e);\n    const element = e.changedTouches[0].target;\n    const sx = parseInt(element.getAttribute(\"data-x\"), 0);\n    const sy = parseInt(element.getAttribute(\"data-y\"), 0);\n    // 获取触摸结束点相对于屏幕位置\n    const px = e.changedTouches[0].pageX;\n    const py = e.changedTouches[0].pageY;\n\n    // 获取画布位置\n    const rect = document.querySelector(\".list\").getBoundingClientRect();\n    const rx = rect.x;\n    const ry = rect.y;\n\n    // 对比触摸点与画布位置获取坐标\n    const ex = Math.floor((px - rx) / width);\n    const ey = Math.floor((py - ry) / width);\n\n    function e2f(n, m) {\n      if (n > m) {\n        return m + 1;\n      } else if (n < m) {\n        return m - 1;\n      } else {\n        return m;\n      }\n    }\n\n    gamer.touchMove(sx, sy, e2f(ex, sx), e2f(ey, sy));\n  }\n\n  function submitScoreWithSetNickname(score) {\n    // return new Promise((resolve, reject) => {\n    return Swal.fire({\n      title: \"Submit Your \\nScore:  \" + score,\n      input: \"text\",\n      imageUrl: \"./images/cat.svg\",\n      imageWidth: 120,\n      imageHeight: 120,\n      inputAttributes: {\n        autocapitalize: \"off\",\n        placeholder: \"nickname\",\n        required: true,\n      },\n      showCancelButton: true,\n      confirmButtonText: \"提交\",\n      cancelButtonText: \"就不\",\n      showLoaderOnConfirm: true,\n      // preConfirm: (value) => {\n      //   if (!value) {\n      //     alert(\"取个名字这么难吗！\");\n      //     return;\n      //   }\n      //   user.setUsername(value);\n      //   user.setPassword(\"guest\");\n      //   user.set(\"nickname\", value);\n\n      //   user.signUp();\n\n      //   console.log(value);\n      //   resolve()\n      // },\n      // allowOutsideClick: () => !Swal.isLoading(),\n    });\n    // });\n  }\n\n  async function submitScore(score) {\n    await updateScore(score);\n    Swal.fire({\n      title: \"Game Over！\\nScore: \" + score,\n      imageUrl: \"./images/cat.svg\",\n      imageWidth: 120,\n      imageHeight: 120,\n      confirmButtonText: \"好的!\",\n    });\n  }\n\n  async function handleGameOver(score = 0) {\n    try {\n      let user = AV.User.current();\n      if (!user) {\n        // await loginAnonymously();\n        const { value, isConfirmed } = await submitScoreWithSetNickname(score);\n        if (isConfirmed) {\n          user = new AV.User();\n          await user.setUsername(value);\n          await user.setPassword(\"test123\");\n          await user.set(\"nickname\", value);\n          await user.signUp();\n        }\n      }\n      await submitScore(score);\n      setList(null);\n    } catch (error) {\n      console.log(\"err:\", error);\n    }\n\n    return;\n  }\n\n  function start() {\n    gamer.init({\n      onDataChange: setList,\n      onScoreChange: setScore,\n      onTimeChange: setTime,\n      onGameOver: handleGameOver,\n    });\n  }\n\n  return (\n    <div className=\"root\">\n      {list ? (\n        <>\n          <div className=\"header\">\n            <h1>Score: {score}</h1>\n            <h1>Time: {time / 1000}</h1>\n          </div>\n\n          <div\n            className=\"list\"\n            onTouchEnd={handleTouchEnd}\n            style={{ paddingTop: (n / m) * 100 + \"%\" }}\n          >\n            {list.map((i) => {\n              return (\n                <div\n                  onClick={() => {\n                    handleClick(i);\n                  }}\n                  className={cls([\n                    \"item\",\n                    {\n                      select: i.select,\n                      removed: i.status === \"removed\",\n                      removing: i.status === \"removing\",\n                    },\n                  ])}\n                  key={i.id}\n                  style={{\n                    width: width,\n                    height: width,\n                    transform:\n                      \"translate3d(\" +\n                      i.x * width +\n                      \"px,\" +\n                      i.y * width +\n                      \"px,0)\",\n                  }}\n                >\n                  <div\n                    data-x={i.x}\n                    data-y={i.y}\n                    className={cls([\n                      \"icon\",\n                      \"animate__animated\",\n                      {\n                        animate__tada: i.status === \"removing\",\n                      },\n                    ])}\n                    key={i.id}\n                    style={{\n                      width: width - 6,\n                      height: width - 6,\n                      backgroundImage: \"url(./images/\" + i.animal + \".svg)\",\n                    }}\n                  ></div>\n                </div>\n              );\n            })}\n          </div>\n        </>\n      ) : (\n        <div>\n          <div>\n            <Rankings />\n          </div>\n          <div className=\"start\" onClick={start}>\n            START\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import \"./App.css\";\nimport Box from \"./Box\";\n// import Rankings from \"./Rankings\";\n\nfunction App() {\n  return (\n    <div>\n      <div className=\"App\">\n        <Box></Box>\n      </div>\n      <div></div>\n      {/* <Rankings></Rankings> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}